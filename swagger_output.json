{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:4000",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users found.",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to create a user",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID de Usuario."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deletedb": {
      "get": {
        "tags": [
          "Database"
        ],
        "description": "Endpoint to delete database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/createdb": {
      "get": {
        "tags": [
          "Database"
        ],
        "description": "Endpoint to create database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/comment": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get all Comments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Comments found.",
            "schema": {
              "$ref": "#/definitions/comments"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to create a comment",
        "parameters": [
          {
            "name": "newComment",
            "in": "body",
            "description": "Comment Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment created.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comment/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get a comment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Comment."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to update a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateComment",
            "in": "body",
            "description": "Comment Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment updated.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to delete a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comment/product/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get a comment by product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to get all Products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Products found.",
            "schema": {
              "$ref": "#/definitions/products"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to create a product",
        "parameters": [
          {
            "name": "newProduct",
            "in": "body",
            "description": "product Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to update a Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateProduct",
            "in": "body",
            "description": "Product Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Jose Martinez"
        },
        "email": {
          "type": "string",
          "example": "joshepp@hotmail.com"
        },
        "password": {
          "type": "string",
          "example": "2s.lsds"
        },
        "shippingAddress": {
          "type": "string",
          "example": "1234 Main St"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "password",
        "shippingAddress"
      ]
    },
    "users": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Jose Martinez"
          },
          "email": {
            "type": "string",
            "example": "joshepp@hotmail.com"
          },
          "password": {
            "type": "string",
            "example": "2s.lsds"
          },
          "shippingAddress": {
            "type": "string",
            "example": "1234 Main St"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "shippingAddress"
        ]
      }
    },
    "comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "rating": {
          "type": "number",
          "example": 5
        },
        "text": {
          "type": "string",
          "example": "This is a comment"
        },
        "image": {},
        "userId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id",
        "rating",
        "text",
        "userId"
      ]
    },
    "comments": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "text": {
            "type": "string",
            "example": "This is a comment"
          },
          "image": {},
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "id",
          "rating",
          "text",
          "userId"
        ]
      }
    },
    "product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "This is a product"
        },
        "ImageString": {},
        "pricePerUnit": {
          "type": "number",
          "example": 10.99
        },
        "shippingCost": {
          "type": "number",
          "example": 5.99
        }
      },
      "required": [
        "id",
        "description",
        "ImageString",
        "pricePerUnit",
        "shippingCost"
      ]
    },
    "products": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "This is a product"
          },
          "ImageString": {},
          "pricePerUnit": {
            "type": "number",
            "example": 10.99
          },
          "shippingCost": {
            "type": "number",
            "example": 5.99
          }
        },
        "required": [
          "id",
          "description",
          "ImageString",
          "pricePerUnit",
          "shippingCost"
        ]
      }
    }
  }
}