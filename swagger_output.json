{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:4000",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Users found.",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to create a user",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID de Usuario."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateUser",
            "in": "body",
            "description": "User Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deletedb": {
      "get": {
        "tags": [
          "Database"
        ],
        "description": "Endpoint to delete database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/createdb": {
      "get": {
        "tags": [
          "Database"
        ],
        "description": "Endpoint to create database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/comment": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get all Comments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Comments found.",
            "schema": {
              "$ref": "#/definitions/comments"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to create a comment",
        "parameters": [
          {
            "name": "newComment",
            "in": "body",
            "description": "Comment Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment created.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comment/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get a comment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Comment."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to update a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateComment",
            "in": "body",
            "description": "Comment Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment updated.",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to delete a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/comment/product/{id}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Endpoint to get a comment by product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to get all Products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Products found.",
            "schema": {
              "$ref": "#/definitions/products"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to create a product",
        "parameters": [
          {
            "name": "newProduct",
            "in": "body",
            "description": "product Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID Product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to update a Product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateProduct",
            "in": "body",
            "description": "Product Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Endpoint to delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Endpoint to get all carts.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Carts found.",
            "schema": {
              "$ref": "#/definitions/carts"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "Endpoint to create a cart.",
        "parameters": [
          {
            "name": "newCart",
            "in": "body",
            "description": "User Id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Endpoint to get a cart by user id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User id."
          }
        ],
        "responses": {
          "200": {
            "description": "Cart found.",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "description": "Endpoint to update a cart by user id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User id."
          },
          {
            "name": "cart",
            "in": "body",
            "description": "Cart Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productIds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart found.",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "description": "Endpoint to delete a cart by user id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User id."
          }
        ],
        "responses": {
          "200": {
            "description": "Cart found.",
            "schema": {
              "$ref": "#/definitions/cart"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Endpoint to create a order.",
        "parameters": [
          {
            "name": "newOrder",
            "in": "body",
            "description": "Order information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Endpoint to find an order by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order id."
          }
        ],
        "responses": {
          "200": {
            "description": "Order found.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "404": {
            "description": "Order not found.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Endpoint to delete an order by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order id."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/order"
            },
            "description": "Order deleted."
          },
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Order not found.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          },
          "500": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Jose Martinez"
        },
        "email": {
          "type": "string",
          "example": "joshepp@hotmail.com"
        },
        "password": {
          "type": "string",
          "example": "2s.lsds"
        },
        "shippingAddress": {
          "type": "string",
          "example": "1234 Main St"
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "password",
        "shippingAddress"
      ]
    },
    "users": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Jose Martinez"
          },
          "email": {
            "type": "string",
            "example": "joshepp@hotmail.com"
          },
          "password": {
            "type": "string",
            "example": "2s.lsds"
          },
          "shippingAddress": {
            "type": "string",
            "example": "1234 Main St"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "shippingAddress"
        ]
      }
    },
    "comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "rating": {
          "type": "number",
          "example": 5
        },
        "text": {
          "type": "string",
          "example": "This is a comment"
        },
        "image": {},
        "userId": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "id",
        "rating",
        "text",
        "userId"
      ]
    },
    "comments": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "text": {
            "type": "string",
            "example": "This is a comment"
          },
          "image": {},
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "id",
          "rating",
          "text",
          "userId"
        ]
      }
    },
    "product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "This is a product"
        },
        "ImageString": {},
        "pricePerUnit": {
          "type": "number",
          "example": 10.99
        },
        "shippingCost": {
          "type": "number",
          "example": 5.99
        }
      },
      "required": [
        "id",
        "description",
        "ImageString",
        "pricePerUnit",
        "shippingCost"
      ]
    },
    "products": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "This is a product"
          },
          "ImageString": {},
          "pricePerUnit": {
            "type": "number",
            "example": 10.99
          },
          "shippingCost": {
            "type": "number",
            "example": 5.99
          }
        },
        "required": [
          "id",
          "description",
          "ImageString",
          "pricePerUnit",
          "shippingCost"
        ]
      }
    },
    "cart": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Jose Martinez"
            },
            "email": {
              "type": "string",
              "example": "joshepp@hotmail.com"
            },
            "password": {
              "type": "string",
              "example": "2s.lsds"
            },
            "shippingAddress": {
              "type": "string",
              "example": "1234 Main St"
            }
          },
          "required": [
            "id",
            "name",
            "email",
            "password",
            "shippingAddress"
          ]
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "This is a product"
              },
              "ImageString": {},
              "pricePerUnit": {
                "type": "number",
                "example": 10.99
              },
              "shippingCost": {
                "type": "number",
                "example": 5.99
              }
            },
            "required": [
              "id",
              "description",
              "ImageString",
              "pricePerUnit",
              "shippingCost"
            ]
          }
        }
      },
      "required": [
        "user",
        "products"
      ]
    },
    "productIds": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5f9f1b9b9b9b9b9b9b9b9b9b"
          }
        },
        "required": [
          "_id"
        ]
      }
    },
    "newCart": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "userId": {
          "type": "number",
          "example": 1
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "required": [
        "id",
        "userId",
        "products"
      ]
    },
    "orders": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "required": [
          "id",
          "userId",
          "products"
        ]
      }
    },
    "newOrder": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "productIds": {
          "type": "array",
          "example": [
            "5f9f1b9b9b9b9b9b9b9b9b9b"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}